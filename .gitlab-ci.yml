image: node:18

cache:
  paths:
    - node_modules/

before_script:
  - npm --color="always" install --force

build:
  stage: build
  script:
    - npx tsc

    - export VERSION=`[ "$CI_COMMIT_BRANCH" != "main" ] || node scripts/ci-version.js`
    - "node -e \"fs.writeFileSync('package.json', JSON.stringify((json => {json.version = process.env.VERSION || json.version; json.__nxapi_release = process.env.CI_COMMIT_TAG; return json;})(JSON.parse(fs.readFileSync('package.json', 'utf-8'))), null, 4) + '\\n', 'utf-8')\""

    - PACKAGE=`npm --color="always" pack`
    - mv "$PACKAGE" splatnet3-types.tgz
  artifacts:
    paths:
      - dist
      - splatnet3-types.tgz

publish-npm:
  stage: deploy
  script:
    - export VERSION=`node scripts/ci-version.js`
    - "node -e \"fs.writeFileSync('package.json', JSON.stringify((json => {json.version = process.env.VERSION || json.version; json.__nxapi_release = process.env.CI_COMMIT_TAG; return json;})(JSON.parse(fs.readFileSync('package.json', 'utf-8'))), null, 4) + '\\n', 'utf-8')\""

    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
    - npm --color="always" publish
  dependencies:
    - build
  only:
    refs:
      - main
    variables:
      - $NPM_TOKEN
  cache:
    paths:
      - node_modules/
    policy: pull

publish-gitlab:
  stage: deploy
  script:
    # Update the package.json and package-lock.json
    - export VERSION=`node scripts/ci-version.js`
    - "node -e \"fs.writeFileSync('package.json', JSON.stringify((json => {json.name = process.env.GITLAB_NPM_PACKAGE_NAME; json.publishConfig = {access: 'public'}; json.version = process.env.VERSION || json.version; json.__nxapi_release = process.env.CI_COMMIT_TAG; return json;})(JSON.parse(fs.readFileSync('package.json', 'utf-8'))), null, 4) + '\\n', 'utf-8')\""
    - "node -e \"fs.writeFileSync('package-lock.json', JSON.stringify((json => {json.name = process.env.GITLAB_NPM_PACKAGE_NAME; return json;})(JSON.parse(fs.readFileSync('package-lock.json', 'utf-8'))), null, 4) + '\\n', 'utf-8')\""

    - echo "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" | sed s/^https:// > .npmrc
    - npm --color="always" --registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/ publish
  dependencies:
    - build
  only:
    refs:
      - main
    variables:
      - $GITLAB_NPM_PUBLISH == "true"
      - $GITLAB_NPM_PACKAGE_NAME
  cache:
    paths:
      - node_modules/
    policy: pull

publish-github:
  stage: deploy
  script:
    # Update the package.json and package-lock.json
    - export VERSION=`node scripts/ci-version.js`
    - "node -e \"fs.writeFileSync('package.json', JSON.stringify((json => {json.name = process.env.GITHUB_NPM_PACKAGE_NAME; json.publishConfig = {access: 'public'}; json.repository = {type: 'git', url: 'https://github.com/' + process.env.GITHUB_REPOSITORY + '.git'}; json.version = process.env.VERSION || json.version; json.__nxapi_release = process.env.CI_COMMIT_TAG; return json;})(JSON.parse(fs.readFileSync('package.json', 'utf-8'))), null, 4) + '\\n', 'utf-8')\""
    - "node -e \"fs.writeFileSync('package-lock.json', JSON.stringify((json => {json.name = process.env.GITHUB_NPM_PACKAGE_NAME; return json;})(JSON.parse(fs.readFileSync('package-lock.json', 'utf-8'))), null, 4) + '\\n', 'utf-8')\""

    - echo "//npm.pkg.github.com/:_authToken=${GITHUB_NPM_TOKEN}" > .npmrc
    - npm --color="always" --registry=https://npm.pkg.github.com/ publish
  dependencies:
    - build
  only:
    refs:
      - main
    variables:
      - $GITHUB_REPOSITORY
      - $GITHUB_NPM_PACKAGE_NAME
      - $GITHUB_NPM_TOKEN
  cache:
    paths:
      - node_modules/
    policy: pull
